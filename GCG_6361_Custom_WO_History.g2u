Program.Sub.ScreenSU.Start
Gui.frmWOHist..Create(BaseForm)
Gui.frmWOHist..Caption("Work Order History")
Gui.frmWOHist..Size(15240,10395)
Gui.frmWOHist..MinX(15240)
Gui.frmWOHist..MinY(10395)
Gui.frmWOHist..Position(0,0)
Gui.frmWOHist..BackColor(-2147483633)
Gui.frmWOHist..MousePointer(0)
Gui.frmWOHist..Event(UnLoad,frmWOHist_UnLoad)
Gui.frmWOHist..AlwaysOnTop(False)
Gui.frmWOHist..FontName("Tahoma")
Gui.frmWOHist..FontSize(8.25)
Gui.frmWOHist..ControlBox(True)
Gui.frmWOHist..MaxButton(True)
Gui.frmWOHist..MinButton(True)
Gui.frmWOHist..Moveable(True)
Gui.frmWOHist..Sizeable(True)
Gui.frmWOHist..ShowInTaskBar(True)
Gui.frmWOHist..TitleBar(True)
Gui.frmWOHist.GsGCWOHist.Create(GsGridControl)
Gui.frmWOHist.GsGCWOHist.Size(15075,8580)
Gui.frmWOHist.GsGCWOHist.Position(15,1515)
Gui.frmWOHist.GsGCWOHist.Event(RowCellClick,GsGCWOHist_RowCellClick)
Gui.frmWOHist.GsGCWOHist.Enabled(True)
Gui.frmWOHist.GsGCWOHist.Visible(True)
Gui.frmWOHist.GsGCWOHist.Zorder(0)
Gui.frmWOHist.picGSSLogo.Create(PictureBox)
Gui.frmWOHist.picGSSLogo.Size(4695,1305)
Gui.frmWOHist.picGSSLogo.Position(5550,105)
Gui.frmWOHist.picGSSLogo.Event(DblClick,picGSSLogo_DblClick)
Gui.frmWOHist.picGSSLogo.Enabled(True)
Gui.frmWOHist.picGSSLogo.Visible(True)
Gui.frmWOHist.picGSSLogo.Zorder(0)
Gui.frmWOHist.frameDates.Create(Frame)
Gui.frmWOHist.frameDates.Size(1695,1470)
Gui.frmWOHist.frameDates.Position(15,15)
Gui.frmWOHist.frameDates.Caption("Date Range")
Gui.frmWOHist.frameDates.Enabled(True)
Gui.frmWOHist.frameDates.Visible(True)
Gui.frmWOHist.frameDates.Zorder(0)
Gui.frmWOHist.frameDates.FontName("Tahoma")
Gui.frmWOHist.frameDates.FontSize(8.25)
Gui.frmWOHist.dtpStart.Create(DatePicker)
Gui.frmWOHist.dtpStart.Size(1470,285)
Gui.frmWOHist.dtpStart.Position(135,495)
Gui.frmWOHist.dtpStart.Parent("frameDates")
Gui.frmWOHist.dtpStart.Enabled(True)
Gui.frmWOHist.dtpStart.Visible(True)
Gui.frmWOHist.dtpStart.Zorder(0)
Gui.frmWOHist.dtpStart.CheckBox(False)
Gui.frmWOHist.dtpStart.FontName("Tahoma")
Gui.frmWOHist.dtpStart.FontSize(8.25)
Gui.frmWOHist.lblStart.Create(Label,"Start",True,600,255,0,105,300,True,0,"Arial",8,-2147483633,0,0)
Gui.frmWOHist.lblStart.Parent("frameDates")
Gui.frmWOHist.lblStart.BorderStyle(0)
Gui.frmWOHist.lblEnd.Create(Label,"End",True,435,255,0,120,855,True,0,"Arial",8,-2147483633,0,0)
Gui.frmWOHist.lblEnd.Parent("frameDates")
Gui.frmWOHist.lblEnd.BorderStyle(0)
Gui.frmWOHist.dtpEnd.Create(DatePicker)
Gui.frmWOHist.dtpEnd.Size(1470,285)
Gui.frmWOHist.dtpEnd.Position(135,1065)
Gui.frmWOHist.dtpEnd.Parent("frameDates")
Gui.frmWOHist.dtpEnd.Enabled(True)
Gui.frmWOHist.dtpEnd.Visible(True)
Gui.frmWOHist.dtpEnd.Zorder(0)
Gui.frmWOHist.dtpEnd.CheckBox(False)
Gui.frmWOHist.dtpEnd.FontName("Tahoma")
Gui.frmWOHist.dtpEnd.FontSize(8.25)
Gui.frmWOHist.chkHistory.Create(CheckBox)
Gui.frmWOHist.chkHistory.Size(1560,300)
Gui.frmWOHist.chkHistory.Position(1770,795)
Gui.frmWOHist.chkHistory.Caption("Include History")
Gui.frmWOHist.chkHistory.Enabled(True)
Gui.frmWOHist.chkHistory.Visible(True)
Gui.frmWOHist.chkHistory.Zorder(0)
Gui.frmWOHist.chkHistory.FontName("Tahoma")
Gui.frmWOHist.chkHistory.FontSize(8.25)
Gui.frmWOHist.cmdRefresh.Create(Button)
Gui.frmWOHist.cmdRefresh.Size(855,375)
Gui.frmWOHist.cmdRefresh.Position(1785,1110)
Gui.frmWOHist.cmdRefresh.Caption("REFRESH")
Gui.frmWOHist.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.frmWOHist.cmdRefresh.Enabled(True)
Gui.frmWOHist.cmdRefresh.Visible(True)
Gui.frmWOHist.cmdRefresh.Zorder(0)
Gui.frmWOHist.cmdRefresh.FontName("Tahoma")
Gui.frmWOHist.cmdRefresh.FontSize(8.25)
Gui.frmMulti..Create(BaseForm)
Gui.frmMulti..Caption("Work Order: ")
Gui.frmMulti..Size(7845,7230)
Gui.frmMulti..MinX(0)
Gui.frmMulti..MinY(0)
Gui.frmMulti..Position(0,0)
Gui.frmMulti..BackColor(-2147483633)
Gui.frmMulti..MousePointer(0)
Gui.frmMulti..Event(UnLoad,frmMulti_UnLoad)
Gui.frmMulti..AlwaysOnTop(False)
Gui.frmMulti..FontName("Tahoma")
Gui.frmMulti..FontSize(8.25)
Gui.frmMulti..ControlBox(True)
Gui.frmMulti..MaxButton(True)
Gui.frmMulti..MinButton(True)
Gui.frmMulti..Moveable(True)
Gui.frmMulti..Sizeable(True)
Gui.frmMulti..ShowInTaskBar(True)
Gui.frmMulti..TitleBar(True)
Gui.frmMulti.GsGCMulti.Create(GsGridControl)
Gui.frmMulti.GsGCMulti.Size(7710,6930)
Gui.frmMulti.GsGCMulti.Position(0,0)
Gui.frmMulti.GsGCMulti.Enabled(True)
Gui.frmMulti.GsGCMulti.Visible(True)
Gui.frmMulti.GsGCMulti.Zorder(0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.bLoadData.Declare
	V.Global.bLongPart.Declare
	V.Global.dStart.Declare(Date)
	V.Global.dEnd.Declare(Date)
	V.Global.sSelectedPart.Declare(String)
Program.Sub.Preflight.End
Program.Sub.Main.Start
'Modified by: Arturo Almaguer 
'Modified date: 21 May 2021
'ARC ID 4781 WO History modification, new program adds Job detail childtable and adds new columns for Document control

	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sGssLogo.Declare
	V.Local.dStart.Declare
	
	'F.Intrinsic.String.Build("{0}\Gab_GSS_Logo_Green_Dash.png",V.Caller.GasDir,V.Local.sGssLogo)
	F.Intrinsic.String.Build("{0}\ART\GAB_GSS_Logo_Green_Dash.png", V.Caller.GlobalDir, V.Local.sGSSLogo)
	Gui.frmWOHist.picGSSLogo.Picture(V.Local.sGssLogo)

	F.Intrinsic.Control.CallSub(SetAnchors)
	F.Intrinsic.Control.CallSub(CheckLongPart)
	F.Intrinsic.Control.CallSub(SetContextMenus)
	
	'Set Date to 6 months back
	F.Intrinsic.Date.DateAdd("M",-6,V.Ambient.Date,V.Local.dStart)
	Gui.frmWOHist.dtpStart.Value(V.Local.dStart)
	
	Gui.frmWOHist..Show
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End
Program.Sub.frmWOHist_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.End
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmWOHist_UnLoad.End
Program.Sub.SetAnchors.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right
	
	Gui.frmWOHist.frameDates.Anchor(5)
	Gui.frmWOHist.picGSSLogo.Anchor(1)
	Gui.frmWOHist.chkHistory.Anchor(5)
	Gui.frmWOHist.cmdRefresh.Anchor(5)
	Gui.frmWOHist.GsGCWOHist.Anchor(15)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetAnchors.End
Program.Sub.CheckLongPart.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckLongPart.End
Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWOHist..ContextMenuCreate("ctxHist")
	Gui.frmWOHist.GsGCWOHist.ContextMenuAttach("ctxHist")
	Gui.frmWOHist..ContextMenuAddItem("ctxHist","Refresh",0,"Refresh")
	Gui.frmWOHist..ContextMenuAddItem("ctxHist","Export",0,"Export")
	Gui.frmWOHist..ContextMenuAddItem("ctxHist","ResetColumns",0,"Reset Columns")
	Gui.frmWOHist..ContextMenuSetItemEventHandler("ctxHist","Refresh","MenuClickRefresh")
	Gui.frmWOHist..ContextMenuSetItemEventHandler("ctxHist","Export","MenuClickExport")
	Gui.frmWOHist..ContextMenuSetItemEventHandler("ctxHist","ResetColumns","MenuClickResetColumns")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End
Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End
Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXHIST")
			V.Local.sControl.Set("GsGCWOHist")
	F.Intrinsic.Control.EndSelect

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\GAB_4781_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.frmWOHist.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GAB_4781_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.frmWOHist.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End
Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXHIST")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVHIST",4781,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
	F.Intrinsic.Control.EndSelect
	
	V.Global.bLoadData.Set(False)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End
Program.Sub.cmdRefresh_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.iReturn.Declare(Long)
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	'This part was added because customer wanted the possibility to select just a part to show in dashboard
	F.Intrinsic.UI.Msgbox("Would you like to select a specific part?","Part selection", V.Enum.MsgBoxStyle!YesNo, V.Local.iReturn) 
	V.Global.sSelectedPart.Set("")
	F.Intrinsic.Control.If(V.Local.iReturn,=,V.Enum.MsgBoxResult!No)
		
		Gui.frmWOHist.GsGCWOHist.Visible(False)
		Gui.frmWOHist.GsGCWOHist.SuspendLayout()
		F.Intrinsic.Control.CallSub(LoadDtHist)
		F.Intrinsic.Control.CallSub(Deserialize)
		Gui.frmWOHist.GsGCWOHist.ResumeLayout()
		Gui.frmWOHist.GsGCWOHist.Visible(True)
		
	F.Intrinsic.Control.Else
		'If they want to select for an specific part, a browser is created
		F.Intrinsic.Control.CallSub(PartBrowser)
		
		Gui.frmWOHist.GsGCWOHist.Visible(False)
		Gui.frmWOHist.GsGCWOHist.SuspendLayout()
		F.Intrinsic.Control.CallSub(LoadDtHistPart)
		F.Intrinsic.Control.CallSub(Deserialize)
		Gui.frmWOHist.GsGCWOHist.ResumeLayout()
		Gui.frmWOHist.GsGCWOHist.Visible(True)
		
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End
Program.Sub.LoadDtHist.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare

	V.Global.dStart.Set(V.Screen.frmWOHist!dtpStart.Value)
	V.Global.dEnd.Set(V.Screen.frmWOHist!dtpEnd.Value)

	F.Intrinsic.Control.If(v.DataTable.dtHist.Exists)
		F.Data.DataTable.Close("dtHist")
	F.Intrinsic.Control.EndIf
	
	V.Global.bLoadData.Set(True)
	
	F.ODBC.Connection!con.OpenCompanyConnection(500)
	
	F.Intrinsic.String.Build("Select A.Job,A.Suffix, concat(RTRIM(A.Job), RTRIM(A.Suffix)) IDENTIFIER, A.Priority,A.Product_Line,Case When B.Job <> '' Then 'MULTI-PART' Else Coalesce(A.Part,'') End As Part,'' As Display_Part,A.Location,A.Description,A.Customer, A.Customer_PO, A.Date_Opened,A.Date_Due,A.Date_Closed,A.Date_Closed - A.Date_Due As DaysLate, A.Qty_Order,A.Qty_Customer,A.Qty_Completed, (Select Sum(ABS(Qty) * Matl_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Matl_Cost, (Select Sum(ABS(Qty) * Labor_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Labor_Cost, (Select Sum(ABS(Qty) * Ovhd_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Ovhd_Cost, (Select Sum(ABS(Qty) * Outs_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Outs_Cost, (Select Sum(ABS(Qty) * Frgt_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Frgt_Cost, (Select Sum(ABS(Qty) * Oth_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Oth_Cost, (Select Sum( (ABS(Qty) *Matl_Cost)+(ABS(Qty) * Labor_Cost) + ( ABS(Qty) * Ovhd_Cost) + (ABS(Qty)* Outs_Cost) + (ABS(Qty) * Frgt_Cost) + (ABS(Qty) * Oth_Cost))  From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Total_Cost, A.Num_Hours,RTrim(A.Code_Sort) As Code_Sort, A.Salesperson,Case When A.Sales_Order <> '' And A.Sales_Order <> '0000000'  Then A.Sales_Order+'-'+A.Sales_Order_Line Else '' End As Sales_Order,Cast(Case When A.Flag_Serialize = '' Or A.Flag_Serialize = 'N'  Then 0 Else 1 End As Bit) As Flag_Serialize,A.Project,A.Phase,'A' As Status From V_Job_Header A Left Join V_Job_Mult_Parts B On A.Job = B.Job And A.Suffix = B.Suffix Where A.Date_Closed Between '{0}' And '{1}'",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
		F.Intrinsic.String.Build("{0} UNION Select A.Job,A.Suffix, concat(RTRIM(A.Job), RTRIM(A.Suffix)) IDENTIFIER_HISTORY, A.Priority,A.Product_Line,Case When B.Job <> '' Then 'MULTI-PART' Else Coalesce(A.Part,'') End As Part,'' As Display_Part,A.Location,A.Description,A.Customer, A.Customer_PO, A.Date_Opened,A.Date_Due,A.Date_Closed,A.Date_Closed - A.Date_Due As DaysLate,A.Qty_Order,A.Qty_Customer,A.Qty_Completed,(Select Sum(ABS(Qty) * Matl_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Matl_Cost,(Select Sum(ABS(Qty) * Labor_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Labor_Cost,(Select Sum(ABS(Qty) * Ovhd_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Ovhd_Cost,(Select Sum(ABS(Qty) * Outs_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Outs_Cost,(Select Sum(ABS(Qty) * Frgt_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Frgt_Cost,(Select Sum(ABS(Qty) * Oth_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Oth_Cost,(Select Sum((ABS(Qty) *Matl_Cost)+(ABS(Qty) * Labor_Cost) + ( ABS(Qty) * Ovhd_Cost) + (ABS(Qty)* Outs_Cost) + (ABS(Qty) * Frgt_Cost) + (ABS(Qty) * Oth_Cost)) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Total_Cost,A.Num_Hours,RTrim(A.Code_Sort) As Code_Sort, A.Salesperson,Case When A.Sales_Order <> '' And A.Sales_Order <> '0000000' Then A.Sales_Order+'-'+A.Sales_Order_Line Else '' End As Sales_Order,Cast(Case When A.Flag_Serialize = '' Or A.Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,A.Project,A.Phase,'H' As Status From V_Job_Hist_Mast A Left Join V_Job_Mult_Parts B On A.Job = B.Job And A.Suffix = B.Suffix Where A.Date_Closed Between '{1}' And '{2}' Order By Date_Closed Desc;",V.Local.sSQL,V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtHist",con,v.Local.sSQL,True)
	F.Data.DataTable.AddDisplayPartColumn("dtHist",0,"Part","Display_Part")
	
	F.ODBC.Connection!con.Close
	
	'Adding new columns to display document control and full work order
	F.Data.DataTable.AddColumn("dtHist", "DOCUMENTS_CONTROL", "Boolean")
	F.Data.DataTable.AddColumn("dtHist", "FULL_WORK_ORDER", "String")
	
	'Calling for new subroutines
	F.Intrinsic.Control.CallSub(CheckSuffix)
	F.Intrinsic.Control.CallSub(CheckDocs)
	F.Intrinsic.Control.CallSub(LoadGsGCWOHist)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtHist.End
Program.Sub.LoadGsGCWOHist.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmWOHist.GsGCWOHist.AddGridviewFromDatatable("gvHist","dtHist")
	'Gui.frmWOHist.GsGCWOHist.SuspendLayout()
	Gui.frmWOHist.GsGCWOHist.SetGridviewProperty("gvHist","MultiSelect",True)
	Gui.frmWOHist.GsGCWOHist.SetGridviewProperty("gvHist","AllowSort",True)
	Gui.frmWOHist.GsGCWOHist.SetGridviewProperty("gvHist","AllowFilter",True)
	Gui.frmWOHist.GsGCWOHist.SetGridviewProperty("gvHist","OptionsViewShowGroupPanel",True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvHist", V.Enum.GridViewPropertyNames!ShowDetailTabs, True)
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Part","Visible",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Status","Visible",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","IDENTIFIER","Visible",False)
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","Caption","Job")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","Caption","Suffix")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","Caption","Priority")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","Caption","PL")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","Caption","Part")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","Caption","Loc")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Description","Caption","Description")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer","Caption","Customer")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","Caption","Customer PO")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","Caption","Date Opened")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","Caption","Date Due")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","Caption","Date Closed")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","Caption","Late")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","Caption","Order Qty")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","Caption","Customer Qty")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","Caption","Completed Qty")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","Caption","Material")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","Caption","Labor")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","Caption","Overhead")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","Caption","Outside")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","Caption","Frieght")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","Caption","Other")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","Caption","Total Cost")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","Caption","Act Hours")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Code_Sort","Caption","Sort Code")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","Caption","Salesperson")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","Caption","Sales Order")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","Caption","Serialized")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","Caption","Project")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","Caption","Phase")
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Description","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","AllowEdit",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Code_Sort","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","AllowEdit",False)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","AllowEdit",False)
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","ReadOnly",True)
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","MinWidth","75")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","MinWidth","50")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","MinWidth","50")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","MinWidth","50")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","MinWidth","150")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","MinWidth","50")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Description","MinWidth","200")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer","MinWidth","150")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","MinWidth","110")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","MinWidth","65")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","MinWidth","95")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Code_Sort","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","MinWidth","75")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","MinWidth","85")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","MinWidth","85")
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Description","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Code_Sort","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","HeaderFontBold",True)
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","HeaderFontBold",True)

	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Display_Part","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Description","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Customer_PO","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Code_Sort","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","HeaderHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","HeaderHAlignment","Center")
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Job","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Suffix","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Priority","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Product_Line","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Location","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DaysLate","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Salesperson","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Sales_Order","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Flag_Serialize","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Project","CellHAlignment","Center")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Phase","CellHAlignment","Center")
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Opened","DisplayCustomDateTime","d")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Due","DisplayCustomDateTime","d")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Date_Closed","DisplayCustomDateTime","d")
	
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Order","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Customer","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Qty_Completed","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Matl_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Labor_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Ovhd_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Outs_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Frgt_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Oth_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Total_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","Num_Hours","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Qty_Order","Qty_Order","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Qty_Customer","Qty_Customer","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Qty_Completed","Qty_Completed","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Matl_Cost","Matl_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Labor_Cost","Labor_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Ovhd_Cost","Ovhd_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Outs_Cost","Outs_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Frgt_Cost","Frgt_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Oth_Cost","Oth_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Total_Cost","Total_Cost","Sum","","","n")
	Gui.frmWOHist.GsGCWOHist.AddSummaryItem("gvHist","Num_Hours","Num_Hours","Sum","","","n")
	
	'Setting column properties for FULL_WORK_ORDER column
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!Caption, "Work Order")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!AllowEdit, False)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!CellVAlignment, "Center")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!VisibleIndex, 2)
	
	'Setting column properties for DOCUMENTS_CONTROL column
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!Caption, "Documents assigned?")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!MinWidth, 150)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!AllowEdit, False)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "DOCUMENTS_CONTROL", V.Enum.ColumnPropertyNames!VisibleIndex, 3) 
	
	'Setting IsHyperlink property
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist", "FULL_WORK_ORDER", V.Enum.ColumnPropertyNames!IsHyperlink, True)

	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.frmWOHist.GsGCWOHist.SetColumnProperty("gvHist","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	'Calling for child data tables
	F.Intrinsic.Control.CallSub(LoadDtDvMaterialSeq)
	F.Intrinsic.Control.CallSub(LoadDtDvLaborSeq)
	F.Intrinsic.Control.CallSub(LoadDtDvOtherSeq)
	
	'Gui.frmWOHist.GsGCWOHist.ResumeLayout()
	Gui.frmWOHist.GsGCWOHist.MainView("gvHist")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGsGCWOHist.End
Program.Sub.GsGCWOHist_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sStatus.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	V.Local.sParams.Declare
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
	
'		F.Intrinsic.Control.Case("Display_Part")
'			Gui.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","Part",V.Args.RowIndex,V.Local.sPart)
'			Gui.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","Location",V.Args.RowIndex,V.Local.sLoc)
'			F.Intrinsic.Control.If(V.Local.sPart,<>,"MULTI-PART")
'				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
'				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
'			F.Intrinsic.Control.Else
'				'Load Multi-Part screen
'				Gui.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","JOB",V.Args.RowIndex,V.Local.sJob)
'				Gui.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'				f.Intrinsic.Control.CallSub(LoadMultiPart,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
'			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FULL_WORK_ORDER")
			GUI.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","Job", V.Args.RowIndex, V.Local.sJob)
			GUI.frmWOHist.GsGCWOHist.GetCellValueByColumnName("gvHist","Suffix", V.Args.RowIndex, V.Local.sSuf)
			F.Intrinsic.String.ConcatCallWrapperArgs("7", V.Local.sJob, V.Local.sSuf, "A", V.Local.sParams) 'A/H Switch: A for Active, H for History
			F.Global.General.CallWrapperSync(450000, V.Local.sParams)		

	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCWOHist_RowCellClick.End
Program.Sub.frmMulti_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmMulti..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.frmMulti_UnLoad.End
Program.Sub.LoadMultiPart.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sCaption.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtMulti.Exists)
		F.Data.DataTable.Close("dtMulti")
	F.Intrinsic.Control.EndIf
	
	V.Local.sJob.Set(V.Args.Job)
	V.Local.sSuffix.Set(V.Args.Suffix)
	
	F.Intrinsic.Control.If(V.Local.sSuffix.Trim,=,"")
		F.Intrinsic.String.Build("Work Order: {0}",V.Local.sJob,V.Local.sCaption)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Work Order: {0}-{1}",V.Local.sJob,V.Local.sSuffix,V.Local.sCaption)
	F.Intrinsic.Control.EndIf
	Gui.frmMulti..Caption(V.Local.sCaption)
	
	F.Intrinsic.String.Build("Select Job,Suffix,Part,RTrim(Descr) As Descr,Qty From Job_Mult_Parts Where Job = '{0}' And Suffix = '{1}';",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtMulti","con",V.Local.sSQL,True)
	
	Gui.frmMulti.GsGCMulti.AddGridviewFromDatatable("gvMulti","dtMulti")
	Gui.frmMulti.GsGCMulti.MainView("gvMulti")
	Gui.frmMulti.GsGCMulti.SuspendLayout()
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","MultiSelect",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","AllowSort",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","AllowFilter",True)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsDetailShowDetailTabs",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsViewShowGroupPanel",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsMenuShowAutoFilterRowItem",False)
	Gui.frmMulti.GsGCMulti.SetGridViewProperty("gvMulti","OptionsFilterUseNewCustomFilterDialog",True)
	
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","Visible",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","Visible",False)
	
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","Caption","Job")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","Caption","Suffix")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","Caption","Part")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","Caption","Description")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","Caption","Qty")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","AllowEdit",False)
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","AllowEdit",False)

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","MinWidth","20")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","MinWidth","20")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","MinWidth","120")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","MinWidth","200")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","MinWidth","50")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Part","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Descr","HeaderHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","HeaderHAlignment","Center")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Job","CellHAlignment","Center")
	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Suffix","CellHAlignment","Center")

	Gui.frmMulti.GsGCMulti.SetColumnProperty("gvMulti","Qty","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.frmMulti.GsGCMulti.ResumeLayout()
	
	Gui.frmMulti..Show
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadMultiPart.End
Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
		V.Local.sError.Declare
		
		V.Local.sSerialize.Declare
		
		'GvHist
		Gui.frmWOHist.GsGCWOHist.Serialize("gvHist",V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVHIST",6361,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
		
		'For gvMaterialSeq
		GUI.frmWOHist.GsGCWOHist.Serialize("gvMaterialSeq", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode,"gvMaterialSeq",6361,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM, V.Local.sSerialize)
		
		'For gvLaborSeq
		GUI.frmWOHist.GsGCWOHist.Serialize("gvLaborSeq", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode,"gvLaborSeq",6361,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM, V.Local.sSerialize)
	
		'For gvOtherSeq
		GUI.frmWOHist.GsGCWOHist.Serialize("gvOtherSeq", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode,"gvOtherSeq",6361,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM, V.Local.sSerialize)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End
Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
		V.Local.sError.Declare
		
		V.Local.sSerialize.Declare
		
		'GvHist
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVHIST",6361,1000,6,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.frmWOHist.GsGCWOHist.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		'For gvMaterialSeq
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvMaterialSeq",6361,1000,6,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.frmWOHist.GsGCWOHist.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		'For gvLaborSeq
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvLaborSeq",6361,1000,6,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.frmWOHist.GsGCWOHist.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		'For gvOtherSeq
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvOtherSeq",6361,1000,6,"",V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
			Gui.frmWOHist.GsGCWOHist.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End
Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/login-customer","","",0)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End
'Subroutines added by Arturo Almaguer
Program.Sub.LoadDtDvMaterialSeq.Start
'Pulling in data for Material Sequence child datatable
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	
	F.Intrinsic.Control.If(V.Global.sSelectedPart, =, "")
		'Code enters this option if user doesn't select just a part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) MATERIAL_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'M' order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Local.sSQL) 
		
		F.ODBC.Connection!Con.OpenCompanyConnection
		F.Data.DataTable.CreateFromSQL("dtHist$dtMaterialSeq", "Con", V.Local.sSQL, True)
		F.ODBC.Connection!Con.Close
		
		'If History option is checked, merges datatables to have closed WOs and purged WOs in one dt, so we can then proceed to add the relation between both main and child dataatables
		F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
			F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) MATERIAL_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ  and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'M' order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
		
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtMaterialSeqHist", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
		
			F.Data.DataTable.Merge("dtMaterialSeqHist", "dtHist$dtMaterialSeq", True, 2)
			F.Data.DataTable.Close("dtMaterialSeqHist")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Else
		'Same code as above but this one is also filtering by the part in C.PART if user selects just one part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) MATERIAL_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ  and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'M' and C.PART = '{2}' order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Global.sSelectedPart, V.Local.sSQL) 
			
		F.ODBC.Connection!Con.OpenCompanyConnection
		F.Data.DataTable.CreateFromSQL("dtHist$dtMaterialSeq", "Con", V.Local.sSQL, True)
		F.ODBC.Connection!Con.Close
		
		F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
			F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) MATERIAL_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'M' and C.PART = '{2}' order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Global.sSelectedPart,V.Local.sSQL)
		
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtMaterialSeqHist", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
		
			F.Data.DataTable.Merge("dtMaterialSeqHist", "dtHist$dtMaterialSeq", True, 2)
			F.Data.DataTable.Close("dtMaterialSeqHist")
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf
	
	'Setting the relation between parent and child data tables
	F.Data.DataTable.AddRelation("dtHist", "IDENTIFIER", "dtHist$dtMaterialSeq", "MATERIAL_JS", "Material")
	
	F.Data.DataView.Create("dtHist$dtMaterialSeq", "dvMaterialSeq", 22)
	GUI.frmWOHist.GsGCWOHist.AddGridViewFromDataView("gvMaterialSeq", "dtHist", "dvMaterialSeq")
	
	'Setting all the gridview and column properties
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!ReadOnly, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!EnableAppearanceOddRow, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!RowAutoHeight, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", V.Enum.GridViewPropertyNames!ColumnPanelRowHeight, 30)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvMaterialSeq", "OptionsViewColumnAutoWidth", False) 'It allows the user to adjust the column widths
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "MATERIAL_JS", "Visible", False)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "SEQ", V.Enum.ColumnPropertyNames!Caption, "Sequence")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!Caption, "Date")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "PART", V.Enum.ColumnPropertyNames!Caption, "Part")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!Caption, "Description")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!Caption, "Units")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "AMOUNT", V.Enum.ColumnPropertyNames!Caption, "Amount")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "TEXT", V.Enum.ColumnPropertyNames!Caption, "Comments")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "SEQ", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "PART", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "AMOUNT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "TEXT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "SEQ", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "PART", V.Enum.ColumnPropertyNames!MinWidth, 120)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!MinWidth, 200)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "AMOUNT", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "TEXT", V.Enum.ColumnPropertyNames!MinWidth, 350)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.00")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "AMOUNT", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.00")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvMaterialSeq", "TEXT", V.Enum.ColumnPropertyNames!CellWordWrap, "Wrap")
	
	'Adding summary items to the child's gridview footer 
	GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvMaterialSeq", "HOURS_WORKED", "PriceTotal", "SUM", "Total: ", "", n2) 'n2 =  "#,##0.00"
	'GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvMaterialSeq", "AMOUNT", "PriceTotal", "SUM", "Total: ", "", c2) 'c2 =  "$#,##0.00"
	
F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
		
F.Intrinsic.Control.EndTry
Program.Sub.LoadDtDvMaterialSeq.End
Program.Sub.CheckDocs.Start
'This subroutine is checking if a job has WO documents assigned to it
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.iCounter.Declare(Long)
	V.Local.sWorkOrder.Declare(String)
	
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtHist.RowCount--, 1) 
		'Getting the job number from each record
		V.Local.sWorkOrder.Set(V.DataTable.dtHist(V.Local.iCounter).Job!FieldVal)
		F.Intrinsic.String.Build("select LEFT(ID,6) as WO from LINK_DATA where TYPE = '00020' and WO = '{0}';", V.Local.sWorkOrder, V.Local.sSQL)
		F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sSQL)
		
		F.Intrinsic.Control.If(V.Local.sSQL, =, "")
			'NO documents found
			F.Data.DataTable.SetValue("dtHist", V.Local.iCounter, "DOCUMENTS_CONTROL", 0)
		F.Intrinsic.Control.Else
			'It has documents assigned
			F.Data.DataTable.SetValue("dtHist", V.Local.iCounter, "DOCUMENTS_CONTROL", 1)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Next(V.Local.iCounter)
	F.ODBC.Connection!Con.Close

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
		
F.Intrinsic.Control.EndTry
Program.Sub.CheckDocs.End
Program.Sub.CheckSuffix.Start
'This subroutine is checking if a job has suffix assigned to it, customer has many WO without suffix
F.Intrinsic.Control.Try

	V.Local.iCounter.Declare(Long)
	V.Local.sSuffix.Declare(String)
	V.Local.sJob.Declare(String)
	V.Local.sWO.Declare(String)
	
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtHist.RowCount--, 1) 
		
		V.Local.sJob.Set(V.DataTable.dtHist(V.Local.iCounter).Job!FieldVal)
		V.Local.sSuffix.Set(V.DataTable.dtHist(V.Local.iCounter).Suffix!FieldVal)
		F.Intrinsic.Control.If(V.Local.sSuffix, =, "   ")
			F.Data.DataTable.SetValue("dtHist", V.Local.iCounter, "FULL_WORK_ORDER", V.Local.sJob)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}-{1}", V.Local.sJob, V.Local.sSuffix, V.Local.sWO)
			F.Data.DataTable.SetValue("dtHist", V.Local.iCounter, "FULL_WORK_ORDER", V.Local.sWO)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Next(V.Local.iCounter)
	F.ODBC.Connection!Con.Close

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
		
F.Intrinsic.Control.EndTry
Program.Sub.CheckSuffix.End
Program.Sub.LoadDtDvLaborSeq.Start
'Pulling in data for Labor Sequence child datatable
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	
	F.Intrinsic.Control.If(V.Global.sSelectedPart, =, "")
		'Code enters this option if user doesn't select just a part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) LABOR_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.EMPLOYEE) EMPLOYEE, RTRIM(A.MACHINE) MACHINE, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'L' order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Local.sSQL) 
		
		F.ODBC.Connection!Con.OpenCompanyConnection
		F.Data.DataTable.CreateFromSQL("dtHist$dtLaborSeq", "Con", V.Local.sSQL, True)
		F.ODBC.Connection!Con.Close
		
		'If History option is checked, merges datatables to have closed WOs and purged WOs in one dt, so we can then proceed to add the relation between both main and child dataatables
		F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
			
			F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) LABOR_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'L' order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
		
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtLaborSeqHist", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
			
			F.Data.DataTable.Merge("dtLaborSeqHist", "dtHist$dtLaborSeq", True, 2)
			F.Data.DataTable.Close("dtLaborSeqHist")
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Else
		'Same code as above but this one is also filtering by the part in C.PART if user selects just one part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) LABOR_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.EMPLOYEE) EMPLOYEE, RTRIM(A.MACHINE) MACHINE, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'L' and C.PART = '{2}' order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Global.sSelectedPart,V.Local.sSQL) 
		
		F.ODBC.Connection!Con.OpenCompanyConnection
		F.Data.DataTable.CreateFromSQL("dtHist$dtLaborSeq", "Con", V.Local.sSQL, True)
		F.ODBC.Connection!Con.Close
		
		F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
			
			F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) LABOR_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO = 'L' and C.PART = '{2}' order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Global.sSelectedPart, V.Local.sSQL)
		
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtLaborSeqHist", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
			
			F.Data.DataTable.Merge("dtLaborSeqHist", "dtHist$dtLaborSeq", True, 2)
			F.Data.DataTable.Close("dtLaborSeqHist")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndIf
	
	'Setting the relation between parent and child data tables
	F.Data.DataTable.AddRelation("dtHist", "IDENTIFIER", "dtHist$dtLaborSeq", "LABOR_JS", "Labor")
	
	F.Data.DataView.Create("dtHist$dtLaborSeq", "dvLaborSeq", 22)
	GUI.frmWOHist.GsGCWOHist.AddGridViewFromDataView("gvLaborSeq", "dtHist", "dvLaborSeq")
	
	'Setting all the gridview and column properties
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!ReadOnly, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!EnableAppearanceOddRow, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!RowAutoHeight, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", V.Enum.GridViewPropertyNames!ColumnPanelRowHeight, 30)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvLaborSeq", "OptionsViewColumnAutoWidth", False) 'It allows the user to adjust the column widths
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "LABOR_JS", "Visible", False)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "SEQ", V.Enum.ColumnPropertyNames!Caption, "Sequence")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!Caption, "Date")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "EMPLOYEE", V.Enum.ColumnPropertyNames!Caption, "Employee")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "MACHINE", V.Enum.ColumnPropertyNames!Caption, "Workcenter")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!Caption, "Hours")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "AMOUNT", V.Enum.ColumnPropertyNames!Caption, "Amount")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "TEXT", V.Enum.ColumnPropertyNames!Caption, "Comments")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "SEQ", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "EMPLOYEE", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "MACHINE", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "AMOUNT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "TEXT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "SEQ", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "EMPLOYEE", V.Enum.ColumnPropertyNames!MinWidth, 120)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "MACHINE", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "AMOUNT", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "TEXT", V.Enum.ColumnPropertyNames!MinWidth, 350)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.00")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "AMOUNT", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.00")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvLaborSeq", "TEXT", V.Enum.ColumnPropertyNames!CellWordWrap, "Wrap")
	
	'Adding summary items to the child's gridview footer 
	GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvLaborSeq", "HOURS_WORKED", "PriceTotal", "SUM", "Total: ", "", n2) 'n2 =  "#,##0.00"
	'GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvLaborSeq", "AMOUNT", "PriceTotal", "SUM", "Total: ", "", c2) 'c2 =  "$#,##0.00"
	
F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
		
F.Intrinsic.Control.EndTry
Program.Sub.LoadDtDvLaborSeq.End
Program.Sub.LoadDtDvOtherSeq.Start
'Pulling in data for Other Sequence child datatable
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	
	F.Intrinsic.Control.If(V.Global.sSelectedPart, =, "")
		'Code enters this option if user doesn't select just a part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) OTHER_JS, RTRIM(A.SEQ) SEQ, RTRIM(A.LMO) LMO, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO not in ('M','L') order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Local.sSQL) 
		
		F.ODBC.Connection!Con.OpenCompanyConnection
		F.Data.DataTable.CreateFromSQL("dtHist$dtOtherSeq", "Con", V.Local.sSQL, True)
		F.ODBC.Connection!Con.Close
		
		'If History option is checked, merges datatables to have closed WOs and purged WOs in one dt, so we can then proceed to add the relation between both main and child dataatables
		F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
			
			F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) OTHER_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO not in ('M','L') order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
		
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtOtherSeqHist", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
			
			F.Data.DataTable.Merge("dtOtherSeqHist", "dtHist$dtOtherSeq", True, 2)
			F.Data.DataTable.Close("dtOtherSeqHist")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Else
		'Same code as above but this one is also filtering by the part in C.PART if user selects just one part to display in dashboard
		F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) OTHER_JS, RTRIM(A.SEQ) SEQ, RTRIM(A.LMO) LMO, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_DETAIL A LEFT JOIN V_JOB_HEADER C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO not in ('M','L') and C.PART = '{2}' order by A.SEQ;", V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Global.sSelectedPart, V.Local.sSQL) 
			
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtHist$dtOtherSeq", "Con", V.Local.sSQL, True)
			F.ODBC.Connection!Con.Close
			
			F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
				
				F.Intrinsic.String.Build("select distinct concat(RTRIM(A.JOB), RTRIM(A.SUFFIX)) OTHER_JS, RTRIM(A.SEQ) SEQ, A.DATE_SEQUENCE, RTRIM(A.PART) PART, RTRIM(A.DESCRIPTION) DESCRIPTION, A.HOURS_WORKED, A.AMOUNT_LABOR + A.AMT_OVERHEAD as AMOUNT, RTRIM(B.TEXT) TEXT FROM V_JOB_HIST_DTL A LEFT JOIN V_JOB_HIST_MAST C ON A.JOB = C.JOB and A.SUFFIX = C.SUFFIX LEFT JOIN V_JOB_DTL_H_NOTES B ON A.JOB = B.JOB and A.SUFFIX = B.SUFFIX and A.SEQ = B.JOB_SEQ and A.DATE_SEQUENCE = B.DATE where C.DATE_CLOSED between '{0}' and '{1}' and A.LMO not in ('M','L') and C.PART = '{2}' order by A.SEQ;",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate, V.Global.sSelectedPart, V.Local.sSQL)
			
				F.ODBC.Connection!Con.OpenCompanyConnection
				F.Data.DataTable.CreateFromSQL("dtOtherSeqHist", "Con", V.Local.sSQL, True)
				F.ODBC.Connection!Con.Close
				
				F.Data.DataTable.Merge("dtOtherSeqHist", "dtHist$dtOtherSeq", True, 2)
				F.Data.DataTable.Close("dtOtherSeqHist")
			F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndIf
	
	'Setting the relation between parent and child data tables
	F.Data.DataTable.AddRelation("dtHist", "IDENTIFIER", "dtHist$dtOtherSeq", "OTHER_JS", "Other")
	
	F.Data.DataView.Create("dtHist$dtOtherSeq", "dvOtherSeq", 22)
	GUI.frmWOHist.GsGCWOHist.AddGridViewFromDataView("gvOtherSeq", "dtHist", "dvOtherSeq")
	
	'Setting all the gridview and column properties
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!ReadOnly, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!EnableAppearanceOddRow, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!RowAutoHeight, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", V.Enum.GridViewPropertyNames!ColumnPanelRowHeight, 30)
	GUI.frmWOHist.GsGCWOHist.SetGridviewProperty("gvOtherSeq", "OptionsViewColumnAutoWidth", False) 'It allows the user to adjust the column widths
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "OTHER_JS", "Visible", False)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "SEQ", V.Enum.ColumnPropertyNames!Caption, "Sequence")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "LMO", V.Enum.ColumnPropertyNames!Caption, "Job Type")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!Caption, "Date")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "PART", V.Enum.ColumnPropertyNames!Caption, "Part")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!Caption, "Description")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!Caption, "Units")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "AMOUNT", V.Enum.ColumnPropertyNames!Caption, "Amount")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "TEXT", V.Enum.ColumnPropertyNames!Caption, "Comments")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "SEQ", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "LMO", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "PART", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "AMOUNT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "TEXT", V.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "SEQ", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "LMO", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!MinWidth, 80)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "PART", V.Enum.ColumnPropertyNames!MinWidth, 120)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DESCRIPTION", V.Enum.ColumnPropertyNames!MinWidth, 200)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "AMOUNT", V.Enum.ColumnPropertyNames!MinWidth, 100)
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "TEXT", V.Enum.ColumnPropertyNames!MinWidth, 350)
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "DATE_SEQUENCE", V.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "HOURS_WORKED", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.00")
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "AMOUNT", V.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.00")
	
	GUI.frmWOHist.GsGCWOHist.SetColumnProperty("gvOtherSeq", "TEXT", V.Enum.ColumnPropertyNames!CellWordWrap, "Wrap")
	
	'Adding summary items to the child's gridview footer 
	GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvOtherSeq", "HOURS_WORKED", "PriceTotal", "SUM", "Total: ", "", n2) 'n2 =  "#,##0.00"
	'GUI.frmWOHist.GsGCWOHist.AddSummaryItem("gvOtherSeq", "AMOUNT", "PriceTotal", "SUM", "Total: ", "", c2) 'c2 =  "$#,##0.00"
	
F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
		
F.Intrinsic.Control.EndTry
Program.Sub.LoadDtDvOtherSeq.End
Program.Sub.PartBrowser.Start
'Loads part browser for the user to select just one part to display in dashboard
F.Intrinsic.Control.Try

	V.Local.sTitle.Declare(String)
	V.Local.iWidth.Declare(Long)
	V.Local.sSQL.Declare(String)
	
	V.Local.sTitle.Set("Part Selection")
	V.Local.iWidth.Set(100)
	V.Global.dStart.Set(V.Screen.frmWOHist!dtpStart.Value)
	V.Global.dEnd.Set(V.Screen.frmWOHist!dtpEnd.Value)
		
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.Intrinsic.String.Build("select distinct RTRIM(PART) PART from V_JOB_HEADER where DATE_CLOSED Between '{0}' And '{1}'",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Local.sSQL)
	F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
		F.Intrinsic.String.Build("{0} UNION select distinct RTRIM(PART) PART from V_JOB_HIST_MAST where DATE_CLOSED Between '{1}' And '{2}'", V.Local.sSQL, V.Global.dStart.PervasiveDate, V.Global.dEnd.PervasiveDate, V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.UI.Browser("Part Selection","Con",V.Local.sSQL, V.Local.sTitle, V.Local.iWidth, V.Global.sSelectedPart)
	F.ODBC.Connection!Con.Close
	
	F.Intrinsic.Control.If(V.Global.sSelectedPart.IsCancel)
		F.Intrinsic.UI.Msgbox("Please click on Refresh button and choose a part to load dashboard", "Part Not Selected")	
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
	
F.Intrinsic.Control.EndTry
Program.Sub.PartBrowser.End
Program.Sub.LoadDtHistPart.Start
'This subroutine loads the data the same way as LoadDtHist sub, but this one also filter by the selected part if user selects just a part to display in dashboard
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare

	V.Global.dStart.Set(V.Screen.frmWOHist!dtpStart.Value)
	V.Global.dEnd.Set(V.Screen.frmWOHist!dtpEnd.Value)

	F.Intrinsic.Control.If(v.DataTable.dtHist.Exists)
		F.Data.DataTable.Close("dtHist")
	F.Intrinsic.Control.EndIf
	
	V.Global.bLoadData.Set(True)
	
	F.ODBC.Connection!con.OpenCompanyConnection(500)
	
	F.Intrinsic.String.Build("Select A.Job,A.Suffix, concat(RTRIM(A.Job), RTRIM(A.Suffix)) IDENTIFIER, A.Priority,A.Product_Line,Case When B.Job <> '' Then 'MULTI-PART' Else Coalesce(A.Part,'') End As Part,'' As Display_Part,A.Location,A.Description,A.Customer, A.Customer_PO, A.Date_Opened,A.Date_Due,A.Date_Closed,A.Date_Closed - A.Date_Due As DaysLate, A.Qty_Order,A.Qty_Customer,A.Qty_Completed, (Select Sum(ABS(Qty) * Matl_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Matl_Cost, (Select Sum(ABS(Qty) * Labor_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Labor_Cost, (Select Sum(ABS(Qty) * Ovhd_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Ovhd_Cost, (Select Sum(ABS(Qty) * Outs_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Outs_Cost, (Select Sum(ABS(Qty) * Frgt_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Frgt_Cost, (Select Sum(ABS(Qty) * Oth_Cost) From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999' ) As Oth_Cost, (Select Sum( (ABS(Qty) *Matl_Cost)+(ABS(Qty) * Labor_Cost) + ( ABS(Qty) * Ovhd_Cost) + (ABS(Qty)* Outs_Cost) + (ABS(Qty) * Frgt_Cost) + (ABS(Qty) * Oth_Cost))  From V_Job_Dtl_Supp C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Total_Cost, A.Num_Hours,RTrim(A.Code_Sort) As Code_Sort, A.Salesperson,Case When A.Sales_Order <> '' And A.Sales_Order <> '0000000'  Then A.Sales_Order+'-'+A.Sales_Order_Line Else '' End As Sales_Order,Cast(Case When A.Flag_Serialize = '' Or A.Flag_Serialize = 'N'  Then 0 Else 1 End As Bit) As Flag_Serialize,A.Project,A.Phase,'A' As Status From V_Job_Header A Left Join V_Job_Mult_Parts B On A.Job = B.Job And A.Suffix = B.Suffix Where A.Date_Closed Between '{0}' And '{1}' and A.Part = '{2}'",V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Global.sSelectedPart,V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Screen.frmWOHist!chkHistory.Value,=,1)
		F.Intrinsic.String.Build("{0} UNION Select A.Job,A.Suffix, concat(RTRIM(A.Job), RTRIM(A.Suffix)) IDENTIFIER, A.Priority,A.Product_Line,Case When B.Job <> '' Then 'MULTI-PART' Else Coalesce(A.Part,'') End As Part,'' As Display_Part,A.Location,A.Description,A.Customer, A.Customer_PO, A.Date_Opened,A.Date_Due,A.Date_Closed,A.Date_Closed - A.Date_Due As DaysLate,A.Qty_Order,A.Qty_Customer,A.Qty_Completed,(Select Sum(ABS(Qty) * Matl_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Matl_Cost,(Select Sum(ABS(Qty) * Labor_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Labor_Cost,(Select Sum(ABS(Qty) * Ovhd_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Ovhd_Cost,(Select Sum(ABS(Qty) * Outs_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Outs_Cost,(Select Sum(ABS(Qty) * Frgt_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Frgt_Cost,(Select Sum(ABS(Qty) * Oth_Cost) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Oth_Cost,(Select Sum((ABS(Qty) *Matl_Cost)+(ABS(Qty) * Labor_Cost) + ( ABS(Qty) * Ovhd_Cost) + (ABS(Qty)* Outs_Cost) + (ABS(Qty) * Frgt_Cost) + (ABS(Qty) * Oth_Cost)) From V_Job_Dtl_Supp_H C Where A.Job = C.Job And A.Suffix = C.Suffix and seq <> '999999') As Total_Cost,A.Num_Hours,RTrim(A.Code_Sort) As Code_Sort, A.Salesperson,Case When A.Sales_Order <> '' And A.Sales_Order <> '0000000' Then A.Sales_Order+'-'+A.Sales_Order_Line Else '' End As Sales_Order,Cast(Case When A.Flag_Serialize = '' Or A.Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,A.Project,A.Phase,'H' As Status From V_Job_Hist_Mast A Left Join V_Job_Mult_Parts B On A.Job = B.Job And A.Suffix = B.Suffix Where A.Date_Closed Between '{1}' And '{2}' and A.Part = '{3}' Order By Date_Closed Desc;",V.Local.sSQL,V.Global.dStart.PervasiveDate,V.Global.dEnd.PervasiveDate,V.Global.sSelectedPart, V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtHist",con,v.Local.sSQL,True)
	F.Data.DataTable.AddDisplayPartColumn("dtHist",0,"Part","Display_Part")
	
	F.ODBC.Connection!con.Close
	
	'Adding new columns to display document control and full work order
	F.Data.DataTable.AddColumn("dtHist", "DOCUMENTS_CONTROL", "Boolean")
	F.Data.DataTable.AddColumn("dtHist", "FULL_WORK_ORDER", "String")
	
	'Calling for new subroutines
	F.Intrinsic.Control.CallSub(CheckSuffix)
	F.Intrinsic.Control.CallSub(CheckDocs)
	F.Intrinsic.Control.CallSub(LoadGsGCWOHist)
	
F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
	
F.Intrinsic.Control.EndTry
Program.Sub.LoadDtHistPart.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$apadilla$}$20210616124051619$}$Lag9STqBJOmNXSbd5+msRcBWPGz0aFqSGjpgCwFu86Bi0U5gcvUTKrP/ziEO0a0n2IbBWYRVyKb3zvNvCySLgA==
Program.Sub.Comments.End